#Options
GenerateScanner = true
GenerateParser = true
Language = Java
ScannerName = Lexico
ParserName = Sintatico
SemanticName = Semantico
ScannerCaseSensitive = true
ScannerTable = Compact
Input = Stream
Parser = LL
#RegularDefinitions
dig: [0-9]
min: [a-z]
mai: [A-Z]
letra: {mai} | {min}
pos: [1-9]
num_opc: {dig}? {dig}? {dig}? {dig}?
bloco: %% [^%]* %%
linha: % [^\n]*
#Tokens
//Identificador (variaveis)
identificador:! ({mai}{min}|{min})+(_ {dig}+)?

//Palavras reservadas:
pr_add = identificador: "add"
pr_and = identificador: "and"
pr_begin = identificador: "begin"
pr_bool = identificador: "bool"
pr_count = identificador: "count"
pr_delete = identificador: "delete"
pr_do = identificador: "do"
pr_elementOf = identificador: "elementOf"
pr_else = identificador: "else"
pr_end = identificador: "end"
pr_false = identificador: "false"
pr_float = identificador: "float"
pr_if = identificador: "if"
pr_int = identificador: "int"
pr_list = identificador: "list"
pr_not = identificador: "not"
pr_or = identificador: "or"
pr_print = identificador: "print"
pr_read = identificador: "read"
pr_size = identificador: "size"
pr_string = identificador: "string"
pr_true = identificador: "true"
pr_until = identificador: "until"

//Constantes
cint: 0|{pos}{num_opc}
cfloat: (0|{pos}{num_opc})\.{num_opc}{dig}
cstring: \"[^\n\"\\]*\"


//Comentário bloco
:! {bloco}

//Comentário linha
:!{linha}

//Simbolos
"+"
"-"
"*"
"/"
"=="
"~="
"<"
">"
"="
"<-"
"("
")"
";"
","

//Especiais
:[\s\t\n\r]
#NonTerminals
<gramatica>
<lista_instrucoes>
<instrucao>
<comando>
<declaracao_variaveis>
<tipo_primitivo>
<tipo>
<lista_identificadores>
<lista_identificadores_opc>
<atribuicao_diferente>
<comando_atribuicao_operacao_lista>
<entrada>
<parametro_entrada>
<lista_entrada>
<lista_entrada_opc>
<lista_instrucoes_opc>

<saida>
<lista_expressoes>
<lista_expressoes_opc>

<condicional>
<else_opc>
<lista_comandos>
<lista_comandos_opc>


<repeticao>

<operacao_lista>
<comando_manipulacao_listas>
<expressao>

#Grammar
<gramatica> ::= pr_begin <lista_instrucoes> pr_end ;

<lista_instrucoes> ::= <instrucao> ";" <lista_instrucoes_opc> ;
<lista_instrucoes_opc> ::= <lista_instrucoes> | î ;

<instrucao> ::= <comando> | <declaracao_variaveis> ;

<comando> ::= identificador <comando_atribuicao_operacao_lista> | <entrada> | <saida> | <condicional> | <repeticao> ;
<comando_atribuicao_operacao_lista> ::= <atribuicao_diferente> | <operacao_lista> ;

<declaracao_variaveis> ::= <tipo> <lista_identificadores>  ;
<tipo_primitivo> ::= pr_int | pr_float | pr_bool | pr_string ;
<tipo> ::= <tipo_primitivo> | pr_list "(" <tipo_primitivo> "," cint  ")" ;
<lista_identificadores> ::= identificador <lista_identificadores_opc> ;
<lista_identificadores_opc> ::= "," <lista_identificadores> | î ;

<atribuicao_diferente> ::= "=" <expressao> | "<-" <expressao> ; 


<comando_manipulacao_listas> ::= identificador <operacao_lista> ;
<operacao_lista> ::= pr_add "(" <expressao> "," <expressao> ")" | pr_delete "(" <expressao> ")" ;

<entrada> ::= pr_read "(" <lista_entrada> ")" ;
<parametro_entrada> ::= identificador | cstring "," identificador ;
<lista_entrada> ::= <parametro_entrada> <lista_entrada_opc> ;
<lista_entrada_opc> ::= "," <lista_entrada> | î ;

<saida> ::= pr_print "(" <lista_expressoes> ")" ;
<lista_expressoes> ::= <expressao> <lista_expressoes_opc> ;
<lista_expressoes_opc> ::= "," <lista_expressoes> | î ;

<expressao> ::= cstring ;

<condicional> ::= pr_if <expressao> <lista_comandos> <else_opc> pr_end  ;
<lista_comandos> ::= <comando> ";" <lista_comandos_opc>  ;
<lista_comandos_opc> ::= <lista_comandos> | î ;
<else_opc> ::= î | pr_else <lista_comandos> ;

<repeticao> ::= pr_do <lista_comandos> pr_until <expressao> ;


